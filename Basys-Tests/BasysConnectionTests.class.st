Class {
	#name : #BasysConnectionTests,
	#superclass : #TestCase,
	#instVars : [
		'connection',
		'remotePeer',
		'socket',
		'network'
	],
	#category : 'Basys-Tests'
}

{ #category : #running }
BasysConnectionTests >> setUp [
	super setUp.
	
	socket := Mock new.
	socket stub isConnected willReturn: true. "by default we are testing opened connection"
	network := Mock new.
	remotePeer := Mock new.
	
	connection := BasysConnection inside: network on: socket.
	connection remotePeer: remotePeer
]

{ #category : #tests }
BasysConnectionTests >> testClosing [
	
	connection stub incomingDataLoop 
		will: [ 10 seconds asDelay wait. #done].
	
	connection startIncomingDataProcess.
	20 milliSecond wait.
	connection close.
	20 milliSecond wait.

	connection incomingDataProcess should be isTerminated.
	connection should receive closeSocketSafely.
]

{ #category : #tests }
BasysConnectionTests >> testHasProcessingPriorityByDefault [
	
	connection processingPriority should be: Processor userBackgroundPriority
]

{ #category : #tests }
BasysConnectionTests >> testIsNotOpenedWhenNoSocketIsAssigned [
	
	connection socket: nil.
	
	connection should not be isOpened
]

{ #category : #tests }
BasysConnectionTests >> testIsOpenedWhenSocketIsConnected [
	
	connection isOpened should beReturnedFrom: [socket isConnected] 
]

{ #category : #tests }
BasysConnectionTests >> testProcessingIncomingDataPacket [
	
	(network stub receiveIncomingDataPacketFrom: remotePeer by: connection) willReturn: #dataPacket.
	
	connection processIncomingDataPacket.
	
	network should takeAWhile to receive process: #dataPacket receivedFrom: remotePeer
]

{ #category : #tests }
BasysConnectionTests >> testProcessingIncomingDataPacketShouldBeAsync [
	
	connection processIncomingDataPacket.
	
	(network should takeAWhile to receive process: Any receivedFrom: remotePeer)
		inAnotherProcess
]

{ #category : #tests }
BasysConnectionTests >> testProcessingIncomingDataPacketShouldDoneWithProcessingPriority [
	
	connection processIncomingDataPacket.
	
	(network should takeAWhile to receive process: Any receivedFrom: remotePeer) 
		inProcessWhich 	priority should be: connection processingPriority
]

{ #category : #tests }
BasysConnectionTests >> testProcessingWrongProtocolError [
	
	(network stub receiveIncomingDataPacketFrom: remotePeer by: connection) 
				willRaise: BasysWrongProtocolError.
				
	connection incomingDataLoop.
	
	socket should receive closeAndDestroy
]

{ #category : #tests }
BasysConnectionTests >> testSendingDataPacket [
	
	connection sendDataPacket: #dataPacket.
	
	network should receive sendDataPacket: #dataPacket by: connection
]

{ #category : #tests }
BasysConnectionTests >> testStartingIncomingDataProcess [
	
	connection stub incomingDataLoop 
		shouldBeSentInAnotherProcess;
		will: [ 
			Processor activeProcess should be: connection incomingDataProcess.
			Processor activeProcess terminate ].
	
	connection startIncomingDataProcess.
	20 milliSecond wait.
	
	connection incomingDataProcess should be isTerminated
]

{ #category : #tests }
BasysConnectionTests >> testTerminatedIncomingDataProcessShouldCloseSocket [
	
	connection stub incomingDataLoop 
		will: [ 10 seconds asDelay wait. #done].
	
	connection startIncomingDataProcess.
	20 milliSecond wait.
	connection incomingDataProcess terminate.

	connection should receive closeSocketSafely 
]
